{{define "content"}}
<div class="mdl-grid">
<div class="mdl-cell mdl-cell--6-col">
<form action="eight_display" method="post" id="config8">
  <h3>Set Queen Restrictions:</h3>
  <p id="instructions">Leave empty to omit restrictions.</p>

  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq1" id="setq1" oninput="drawCol(this.value, 0, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 1 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq2" id="setq2" oninput="drawCol(this.value, 1, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 2 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq3" id="setq3" oninput="drawCol(this.value, 2, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 3 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq4" id="setq4" oninput="drawCol(this.value, 3, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 4 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq5" id="setq5" oninput="drawCol(this.value, 4, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 5 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq6" id="setq6" oninput="drawCol(this.value, 5, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 6 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq7" id="setq7" oninput="drawCol(this.value, 6, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 7 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div>
  <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
    <input class="mdl-textfield__input" type="text" pattern="[1-8]{1}" name="setq8" id="setq8" oninput="drawCol(this.value, 7, 8)">
    <label class="mdl-textfield__label" for="setq1">Queen 8 Row</label>
    <span class="mdl-textfield__error">Value must be ∈ [1,8]</span>
  </div> 

  <button type="submit" form="config8" style="float:right;" 
          class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent">
    Submit
  </button>
</form>
</div>

  <!-- Canvas Element -->
  <div class="mdl-cell mdl-cell--6-col mdl-cell--stretch">
    <h3>Restricted Play List:</h3>
    <canvas id="cboard" width="400px" height="400px"></canvas>
  </div>
</div>

<script type="text/javascript">
  const goimg = new Image();
  const stimg = new Image();

  goimg.src = "/web/img/queen_go.png";
  stimg.src = "/web/img/queen_stop.png";

  let c = document.getElementById("cboard");
  let ctx = c.getContext("2d");

  function drawBoard(canvas, ctx, q) {
    let cw = c.width;
    let ch = c.height;
    let sw = cw / q;
    let sh = ch / q;
    
    for (n=0; n<q; n++) {
      for (m=0; m<q; m++) {
        ctx.beginPath();
        ctx.rect(n*sw, m*sh, sw, sh);
        if (n%2) {
          if (m%2) {
            ctx.fillStyle = "black";
            ctx.fill();
          } else {
            ctx.fillStyle = "white";
            ctx.fill();
          }
        } else {
          if (m%2) {
            ctx.fillStyle = "white";
            ctx.fill();
          } else {
            ctx.fillStyle = "black";
            ctx.fill();
          }
        }
      }
    }
  }

  function drawCol(bm, bn, q) {
    let cw = c.width;
    let ch = c.height;
    let sw = cw / q;
    let sh = ch / q;

    for (m=0; m<8; m++) {
      ctx.beginPath();
      ctx.rect(bn*sw, m*sh, sw, sh);
      if (bn%2) {
        if (m%2) {
          ctx.fillStyle = "black";
          ctx.fill();
        } else {
          ctx.fillStyle = "white";
          ctx.fill();
        }
      } else {
        if (m%2) {
          ctx.fillStyle = "white";
          ctx.fill();
        } else {
          ctx.fillStyle = "black";
          ctx.fill();
        }
      }
      if (m==bm-1) {
        console.log("image: ", m, ", ", bn);
        ctx.drawImage(stimg, bn*sw, m*sh, sw, sh);
      } 
    }
  }

  drawBoard(c, ctx, 8);

</script>
{{end}}

{{define "navscript"}}
<script type="text/javascript">
document.getElementById("homea").classList.remove("is-active");
document.getElementById("eighta").classList.add("is-active");
document.getElementById("twelvea").classList.remove("is-active");
document.getElementById("sixteena").classList.remove("is-active");
</script>
{{end}}